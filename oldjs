    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Load header
        fetch('header.html')
            .then(response => response.text())
            .then(data => {
                document.getElementById('header').innerHTML = data;
            });

        // Portfolio items
        const portfolioItems = [
            {
                title: "Dynamical Mean Field Theory on Quantum Computers",
                description: "We study Dynamical Mean Field Theory on noisy quantum computers, highlighting a hybrid classical-quantum workflow and the application or error mitigation techniques on noisy results",
                tags: ["Quantum Applications", "Error Mitigation","DMFT", "Hamiltonian Simulation", "Publications"],
                moreInfo: "Using a Unitary decomposition method called Cartan decomposition, we explored the possibility of simulating Dynamical Mean Field Theory and the Anderson Impurity Model on noisy quantum hardware. For a toy model system, we successfully computed the the Mott-insulator phase diagram for the Hubbard model using 5 qubits on IBM hardware. This project highlights my experience with practical error mitigation, Hamiltonian simulation, and running experiments on quantum hardware. The paper was published in Physical Review Research and can be found here: <a href='https://journals.aps.org/prresearch/abstract/10.1103/PhysRevResearch.5.023198'>Mapping the metal-insulator phase diagram by algebraically fast-forwarding dynamics on a cloud quantum computer</a> \n\n"
            },
            {
                title: "Cartan Decomposition for Hamiltonian Fast-Forwarding",
                description: "",
                tags: ["Quantum Applications", "Quantum Algorithms", "DMFT", "Hamiltonian Simulation", "Publications"],
                moreInfo: "Starting at Oak Ridge during a 2020 Summer Undergraduate Laboratory Internship, I worked on applying methods of Lie algebraic decomposition to efficiently implementing time evolution operators for digital simulation of systems on quantum computers. We successfully found an algorithm based on a classical minimization problem which works well for certain types of Hamiltonians: exactly which Hamiltonians are best is of continuing study. However, for a certain class of models which can be mapped to non-interacting fermions on a 1D lattice, our method works in polynomial time to simulate the dynamics of the system at any target time with only a fixed quantum circuit gate cost. The article, submitted to Physical Review Letters, can be found here: <a href='https://arxiv.org/abs/2104.00728'>Fixed Depth Hamiltonian Simulation via Cartan Decomposition</a>\n\n"
            },
            {
                title: "Charge Transport in floated Ultrathin Films",
                description: "Experimental work investigating fabrication techniques for organic transistors. We used a novel film fabrication technique to create ultra-thin film devices which maintained the efficiency of much thicker films, greatly reducing the cost of materials and the environmental impact of the devices.",
                tags: ["Organic Electronics", "Experimental", "Publications"],
                moreInfo: "Separate from my work on quantum computing, the goal of this project was the understand the properties of semi-conducting polymer films when fabricated using a water floating method. We studied a specific polymer known as N2200, which is a well studied and reasonably good N-type semiconductor. In prior studies, attempts at fabricating transistors using N2200 in ultrathin films, down to single molecular layers of the polymer, observed significant degradation of the mobility of the charges. Using our water floating method, we observed instead, at the worst, mobilities in ultrathin films comparable to the properties of films which used a significantly thicker polymer layers. In addition, the good transport properties were maintained in device configurations that were not feasible for thicker films. Study of the microstructures in the film revealed that the floated filmes maintained better polymer alignment over longer ranges, which is known to contribute to strong electronic mobility. This work was submitted to Advanced Electronic Materials in December 2021. A copy of the manuscript can be download from this link: <a href='Adv Elect Materials - 2022 - Steckmann - Ultrathin P NDI2OD‐T2 Films with High Electron Mobility in Both Bottom‐Gate and.pdf'>Adv Elect Materials - 2022 - Steckmann - Ultrathin P NDI2OD‐T2 Films with High Electron Mobility in Both Bottom‐Gate and.pdf Throughout The Film</a> \n\n"
            },
            {
                title: "Lax Dynamics in Cartan Decomposition",
                description: "With Prof. Moody Chu, I have been working to extend our understanding of the Cartan Decomposition algorithm used in our 'Fixed Depth Hamiltonian Simulation via Cartan Decomposition' work. A key step in the algorithm is finding a set of rotation angles, which has a runtime that scales in polynomial time but a rather large polynomial. Instead, we propose using the study of Lax dynamics to compute the angles for the rotations used in the decomposition. This provides an exact solution to the minimization problem, and avoids costly and often times ineffective numerical optimization. This is very much a work in progress, but I would be happy to discuss the results.\n\n",
                tags: ["Quantum Computing", "Research"],
                moreInfo: "Additional information about this project can be added here. This section will be displayed when the card is expanded."
            }
        ];

        // Function to generate carousel items
        function generateCarouselItems() {
            const carouselInner = document.querySelector('.carousel-inner');
            const carouselIndicators = document.querySelector('.carousel-indicators');
            carouselInner.innerHTML = '';
            carouselIndicators.innerHTML = '';

            const itemsPerSlide = window.innerWidth < 768 ? 1 : 2;
            const numSlides = Math.ceil(portfolioItems.length / itemsPerSlide);

            for (let i = 0; i < numSlides; i++) {
                const carouselItem = document.createElement('div');
                carouselItem.className = 'carousel-item' + (i === 0 ? ' active' : '');

                const row = document.createElement('div');
                row.className = 'row justify-content-center';

                for (let j = 0; j < itemsPerSlide; j++) {
                    const itemIndex = i * itemsPerSlide + j;
                    if (itemIndex >= portfolioItems.length) break;

                    const col = document.createElement('div');
                    col.className = 'col-md-5';

                    const card = document.createElement('div');
                    card.className = 'card portfolio-card';
                    card.addEventListener('click', () => expandCard(card, portfolioItems[itemIndex]));

                    const cardBody = document.createElement('div');
                    cardBody.className = 'card-body text-center';

                    const cardTitle = document.createElement('h5');
                    cardTitle.className = 'card-title';
                    cardTitle.innerHTML = `<a href="#">${portfolioItems[itemIndex].title}</a>`;

                    const cardText = document.createElement('p');
                    cardText.className = 'card-text';
                    cardText.innerHTML = portfolioItems[itemIndex].description;

                    const cardTags = document.createElement('div');
                    cardTags.className = 'card-tags';
                    portfolioItems[itemIndex].tags.forEach(tag => {
                        const tagSpan = document.createElement('span');
                        tagSpan.className = 'badge bg-secondary me-1';
                        tagSpan.textContent = tag;
                        cardTags.appendChild(tagSpan);
                    });

                    cardBody.appendChild(cardTitle);
                    cardBody.appendChild(cardText);
                    cardBody.appendChild(cardTags);
                    card.appendChild(cardBody);
                    col.appendChild(card);
                    row.appendChild(col);
                }

                carouselItem.appendChild(row);
                carouselInner.appendChild(carouselItem);

                const indicator = document.createElement('button');
                indicator.type = 'button';
                indicator.dataset.bsTarget = '#portfolioCarousel';
                indicator.dataset.bsSlideTo = i;
                indicator.className = i === 0 ? 'active' : '';
                indicator.ariaLabel = `Slide ${i + 1}`;
                carouselIndicators.appendChild(indicator);
            }
        }
        let carouselInstance;

        window.addEventListener('load', () => {
            const carousel = document.querySelector('#portfolioCarousel');

            generateCarouselItems();
        });


        // Function to expand card
        function expandCard(card, item) {
            if (card.classList.contains('expanded')) return;

            const overlay = document.createElement('div');
            overlay.className = 'overlay';
            document.body.appendChild(overlay);

            card.classList.add('expanded');
            const separator = document.createElement('hr');
            const moreInfo = document.createElement('p');
            moreInfo.className = 'card-text';
            moreInfo.innerHTML = item.moreInfo;
            card.querySelector('.card-body').appendChild(separator);
            card.querySelector('.card-body').appendChild(moreInfo);

            carouselInstance.pause();


            overlay.addEventListener('click', () => {
                card.classList.remove('expanded');
                separator.remove();
                moreInfo.remove();
                overlay.remove();
                carouselInstance.cycle();
            });
        }

        // Generate carousel items on load and resize
        window.addEventListener('load', generateCarouselItems);
        window.addEventListener('resize', generateCarouselItems);
    </script>